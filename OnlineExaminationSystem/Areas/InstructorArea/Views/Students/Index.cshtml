@model StudentExamViewModel

@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<select class="form-control select-reg" data-url="@Url.Action("Select")">
    <option> -- Select Course -- </option>
    @foreach (var reg in Model.Registrations.OrderBy(r => r.Semester.SemesterTitle).OrderBy(r => r.Course.Title))
    {
        <option value="@reg.RegistrationId">@reg.Semester.SemesterTitle / @reg.Course.Title</option>
    }

</select>
<hr />
@if (Model.SelectedRegistration != null)
{
    <input type="hidden" value="@Model.SelectedRegistration.RegistrationId" id="selectedReg" />
    <div class="panel panel-default">
        @*<div class="panel-heading">
                <h3>@(string.Format("{0} / {1} / Exams ({2})", Model.SelectedRegistration.Semester.SemesterTitle, Model.SelectedRegistration.Course.Title, Model.SelectedRegistration.Exams.Count))</h3>
                @Html.ActionLink("Add Exam", "Create", new { id = Model.SelectedRegistration.RegistrationId })
            </div>*@
        <div class="panel-body">

            @{
    int examCounter = 1;
   
    Model.SelectedExamId = string.IsNullOrWhiteSpace(Model.SelectedExamId) ? "" : Model.SelectedExamId;
            }
            @foreach (var exam in Model.SelectedRegistration.Exams)
            {
               
                @*@exam.Registration.Students.Select(q => q.Student.Registrations.Select(a => a.Registration.ExamVersions.Select(b=> b.StudentScore)))*@

                <div class="row">
                    <div class="col-md-12">
                        <div class="panel tree @(exam.ExamId.Equals(Model.SelectedExamId,StringComparison.OrdinalIgnoreCase) ? "" : "minimize") panel-primary">
                            <div class="panel-heading">
                                Exam( @(examCounter++) ) -> from: @exam.StartDate.ToString() to: @exam.EndDate.ToString() Score : @exam.TotalScore  Duration : @exam.Duration Type : @exam.ExamType
                            </div>
                            <div class="panel-body">
                                <fieldset>
                                    <legend>Students List Score</legend>

                                    <div class="panel-body">
                                        <div class="table-responsive">

                                            <table class="table">

                                                <thead>
                                                    <tr>
                                                        <th>#</th>
                                                        <th>Student Name</th>
                                                        <th>Exam Score</th>
                                                        <th>Studnet Score</th>
                                                        <th>Studnet Grade</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @{int studentCounter = 1;}
                                                    @foreach (var examVersion in exam.Registration.ExamVersions)
                                                    {
                                                        
                                                        if (examVersion.ExamId.Equals(exam.ExamId))
                                                        {
                                                            if (examVersion.StudentId != null)
                                                            {
                                                                var student = (from std in Model.StudentList where std.UserId == examVersion.StudentId select std).First();

                                                            <tr class="success">
                                                                <td>@(studentCounter++)</td>
                                                                <td>@student.Name</td>
                                                                <td>@exam.TotalScore</td>
                                                                <td>@examVersion.StudentScore</td>
                                                                <td>@examVersion.StudentGrade</td>
                                                            </tr>

                                                                @*<div class="row">
                                                                    <div class="col-md-4">@Html.Label("Student Name")</div>
                                                                    <div class="col-md-2">@student.Name</div>
                                                                    <div class="col-md-4">@Html.Label("Exam Total Score")</div>
                                                                    <div class="col-md-2">@examVersion.StudentScore</div>
                                                                </div>*@
                                                            }
                                                        }
                                                    }
                                                </tbody>

</table>
                                        </div>
                                    </div>

                                </fieldset>

                                @if (exam.ExamId.Equals(Model.SelectedExamId, StringComparison.OrdinalIgnoreCase) && ViewData.ModelState.Values.Any(ms => ms.Errors.Count > 0))
                                {
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="alert alert-danger" role="alert">

                                                @foreach (var modelState in ViewData.ModelState.Values)
                                                {
                                                    foreach (var err in modelState.Errors)
                                                    {
                                                        <div>
                                                            <span class="fa fa-warning" aria-hidden="true"></span>
                                                            <span class="sr-only">Error:</span>
                                                            @err.ErrorMessage
                                                        </div>
                                                    }

                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                                @*<div class="row">
                                        <div class="col-md-12">
                                            <a href="#" class="delete-button" data-delete-url="@Url.Action("Delete", new { id = exam.ExamId })">Delete</a> |
                                            @Html.ActionLink("Generate", "Generate", new { id = exam.ExamId })
                                        </div>
                                    </div>*@
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
@section scripts
{
    <script>
        (function () {
            var selectedReg = $('#selectedReg').val()
            if (selectedReg && selectedReg.length > 0) {
                $('.select-reg').val(selectedReg);
            }
            $('.select-reg').change(function () {
                var $this = $(this);
                if ($this.val().length > 0) {
                    window.location = $this.data('url') + "/" + $this.val();
                }
            });
        })();
    </script>
}