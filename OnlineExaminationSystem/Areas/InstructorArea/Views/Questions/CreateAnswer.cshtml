@model CreatedQuestionViewModel

@{
    ViewBag.Title = "Create";
    }

<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        
                <div class="table-responsive">
                    <table class=" table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>
                                    Question
                                </th>
                                <th>
                                    Type
                                </th>
                                <th>
                                    Difficulty
                                </th>
                                @*<th></th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @*                          @foreach (var item in Model)
                {   *@
                            <tr>
                                <td>
                                    @Html.DisplayFor(model => model.CreatedQuestion.QuestionText)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.CreatedQuestion.Type)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.CreatedQuestion.Difficulty)
                                </td>
                                @*                                        <td>
                        @Html.ActionLink("Answers (" + model.CreatedQuestion.Answers.Count + ")", "Index", "Answers", routeValues: new { id = model.CreatedQuestion.QuestionId }, htmlAttributes : null)  |
                        @Html.ActionLink("Edit", "Edit", new { id = model.CreatedQuestion.QuestionId }) |
                        <a href="#" class="delete-button" data-delete-url="@Url.Action("Delete", new { id = item.QuestionId })">Delete</a>
                    </td>*@
                            </tr>
                            @*}*@
                        </tbody>
                    </table>
                </div>
            </div>
       



        <div class="row">
        <div class="col-md-6">
            <div class="panel panel-primary">
                @if (!Model.CreatedQuestion.Type.Equals( OES.Model.Examination.QuestionType.TrueFalse))
                { 
                <div class="panel-heading">Chapter Answers</div>
                <div class="panel-body" >
                    
                    <ul style=" height: 100px; overflow: auto">
                         @foreach (var myAnswer in Model.ChapterAnswers)
                        {

                            if (myAnswer.IsCorrectAnswer == false && myAnswer.AnswerText != "True" && myAnswer.AnswerText != "False")
                            {
                                <li>
                                    @*<div class="row">*@

                                    <div class="col-md-4">
                                        @myAnswer.AnswerText
                                    </div>

                                    @*<div class="col-md-4">
                            @myAnswer.IsCorrectAnswer
                        </div>*@
                                    <div class="col-md-2">
                                        @Html.ActionLink("Add", "CreateAnswerbyAnswerid", new { Answerid = myAnswer.AnswerId, Questionid = Model.CreatedQuestion.QuestionId }, null)
                                        @*@Html.ActionLink("Add", "AddStudent", new { id = Model.Registration.RegistrationId, studentId = student.UserId })*@
                                    </div>
                                </li>
                                @*</div>*@
                            }

                        }
                    </ul>



</div>
                }
            </div>
        </div>
            
        <div class="col-md-6">
            <div class="panel panel-primary">
                <div class="panel-heading">Question Answers</div>
                <div class="panel-body">
                    @foreach (var QuesAnswers in Model.QuestionAnswers.ToList())
                    {
                        <div class="row">

                            <div class="col-md-4">
                                @QuesAnswers.AnswerText
                            </div>

                            <div class="col-md-4">
                                @QuesAnswers.IsCorrectAnswer
                            </div>
                            <div class="col-md-2">
                                @Html.ActionLink("Remove", "RemoveAnswerbyAnswerid", new { Answerid = QuesAnswers.AnswerId, Questionid = Model.CreatedQuestion.QuestionId }, null)
                            </div>
                            <div class="col-md-2">
                                @Html.ActionLink("Edit", "Edit", "Answers", new { id = QuesAnswers.AnswerId  },null)
                            </div>
                           
                        </div>
                    }
                </div>
            </div> 
        </div>
    </div>

    <div class="form-group">
        <h4>Add New Answer</h4>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CreatedQuestion.QuestionId)
    </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NewQuestionAnswer.AnswerText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewQuestionAnswer.AnswerText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewQuestionAnswer.AnswerText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewQuestionAnswer.IsCorrectAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.NewQuestionAnswer.IsCorrectAnswer)
                    @Html.ValidationMessageFor(model => model.NewQuestionAnswer.IsCorrectAnswer, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
      
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="CreateAnswer" class="btn btn-primary" />
                <button value="Done Added Students" type="button" class="btn btn-success" onclick="window.location='@Url.Action("Index", new { id = Model.CreatedQuestion.ChapterId })'">Done Adding Answers</button>
                <button value="Done Added Students" type="button" class="btn btn-success" onclick="window.location='@Url.Action("Create", new { id = Model.CreatedQuestion.ChapterId })'">Add new Question </button>
              </div>
          
       }
