@model OnlineExaminationSystem.Models.ExamVersionViewModel
@{
    ViewBag.Title = "Exam";
    int questionNumber = 1;
}



<h2>Exam  | @ViewBag.ExamTitile</h2>
<br />
<br />


@using (Html.BeginForm("Submit", "Exams", FormMethod.Post , htmlAttributes: new { @id = "examform" }))
{ <fieldset>
    
      <div class="form-group">
          @Html.Label("Duration ( Minutes )", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
              @Html.Label(Model.Duration.ToString(), htmlAttributes: new { @class = "control-label col-md-2", @id = "duration" })
          </div>
      </div>

      <div class="form-group">
          <div class="col-md-6">
              <div id="counter_2"></div>
              <div class="desc">
                  <div>Hours</div>
                  <div>Minutes</div>
                  <div>Seconds</div>
              </div>
          </div>
       </div>
        

</fieldset>
    Html.AntiForgeryToken();
    
    if (Model.MCQQuestions.Count > 0)
    {
        <fieldset>
            <legend>MCQ Questions</legend>
            @foreach (var q in Model.MCQQuestions)
            {
                <div class="panel panel-default">
                    <div class="panel-heading"><span class="text-primary">Q (@(questionNumber++)):</span>&nbsp;@q.QuestionText <span class="text-primary">          Score : @(Model.GetQuestionScore(q))</span></div>
                    <div class="panel-body">
                        @foreach (var answer in q.Answers)
                        {
                            <div class="radio">
                                <label>
             
                                    <input type="radio" name="@q.QuestionVersionId" value="@answer.AnswerVersionId">
                                    @answer.AnswerText
                                </label>
                            </div>

                        }
                    </div>
                </div>
            }
        </fieldset>
    }
    if (Model.CompleteQuestions.Count > 0)
    {
        <fieldset>
            <legend>Complete Questions</legend>
            @foreach (var q in Model.CompleteQuestions)
            {
                <div class="panel panel-default">
                    <div class="panel-heading"><span class="text-primary">Q (@(questionNumber++)):</span>&nbsp;@q.QuestionText  <span class="text-primary">          Score : @(Model.GetQuestionScore(q))</span></div>
                    <div class="panel-body">
                        @foreach (var answer in q.Answers)
                        {
                            <div class="radio">
                                <label>
                                    <input type="radio" name="@q.QuestionVersionId" value="@answer.AnswerVersionId">
                                    @answer.AnswerText
                                </label>
                            </div>

                        }
                    </div>
                </div>
            }
        </fieldset>
    }
    if (Model.TrueFalseQuestions.Count > 0)
    {
        <fieldset>
            <legend>True/False Questions</legend>
            @foreach(var q in Model.TrueFalseQuestions)
            {
                <div class="panel panel-default">
                    <div class="panel-heading"><span class="text-primary">Q (@(questionNumber++)):</span>&nbsp;@q.QuestionText  <span class="text-primary">          Score : @(Model.GetQuestionScore(q))</span></div>
                    <div class="panel-body">
                        @foreach (var answer in q.Answers)
                        {
                            <div class="radio">
                                <label>
                                    <input type="radio" name="@q.QuestionVersionId" value="@answer.AnswerVersionId">
                                    @answer.AnswerText
                                </label>
                            </div>

                        }
                    </div>
                </div>
            }
        </fieldset>
    }
    
    @Html.HiddenFor(model => model.ExamVersionId);
    <div class="container">
        <input type="submit" value="Submit" class="right btn btn-primary" />
    </div>
}



